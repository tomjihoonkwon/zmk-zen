/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    //  Add tri-layer behavior here

    behaviors {
        tri_layer: sl_layer {
            compatible = "urob,zmk-behavior-simple-layer";
            label = "TRI_LAYER";
            layers = <1 2>;        // These are LWR and RSE layers
            target-layer = <3>;    // Layer 3 will activate when both are held
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D  &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C  &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                              &none  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N7        &kp N8        &kp N9        &kp EQUAL  &kp SLASH            &kp PG_UP       &kp UP_ARROW      &kp PAGE_DOWN    &kp HOME   &kp BACKSLASH       &kp BSPC
&trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0     &kp LEFT_BRACKET     &kp LEFT        &kp DOWN          &kp RIGHT_ARROW  &kp END    &kp CLCK            &kp DEL
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS  &kp RIGHT_BRACKET    &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT       &mkp LCLK  &kp K_CONTEXT_MENU  &kp GRAVE
                                    &trans        &trans     &trans               &trans          &trans            &trans
            >;
        };

        raise_layer {
            display-name = "sys";
            bindings = <
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &kp PRINTSCREEN    &bt BT_CLR_ALL  &none         &rgb_ug RGB_TOG  &none            &none  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &none              &bt BT_NXT      &out OUT_BLE  &rgb_ug RGB_EFF  &rgb_ug RGB_EFF  &none  &kp RCTRL
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp INS            &bt BT_PRV      &out OUT_USB  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none  &kp PAUSE_BREAK
                         &trans   &trans   &trans             &trans          &trans        &kp LALT
            >;
        };

        layer_3 {
            display-name = "pntr";
            bindings = <
&trans  &none  &none  &none   &none   &none        &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &msc SCRL_UP    &none            &kp BSPC
&trans  &none  &none  &none   &none   &none        &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN  &none            &kp GRAVE
&trans  &none  &none  &none   &none   &none        &mkp MB4        &mkp MCLK       &mkp MB5         &msc SCRL_LEFT  &msc SCRL_RIGHT  &kp TILDE
                      &trans  &trans  &kp SPACE    &kp RET         &trans          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        PNTR {
            if-layers = <1 2>;
            then-layer = <3>; // Change from 3 to 4
        };
    };
};
