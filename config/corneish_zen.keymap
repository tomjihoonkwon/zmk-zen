/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    //  Add tri-layer behavior here

    behaviors {
        tri_layer: sl_layer {
            compatible = "urob,zmk-behavior-simple-layer";
            label = "TRI_LAYER";
            layers = <1 2>;        // These are LWR and RSE layers
            target-layer = <3>;    // Layer 3 will activate when both are held
        };
    };

    combos {
        compatible = "zmk,combos";

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <21 20>;
        };

        Escape {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        mod3 {
            bindings = <&mo 2>;
            key-positions = <38 39>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <24 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E         &kp R             &kp T          &kp Y        &kp U              &kp I      &kp O    &kp P     &kp BSPC
&kp CAPSLOCK    &kp A  &kp S  &kp D         &kp F             &kp G          &kp H        &kp J              &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C         &kp V             &kp B          &kp N        &kp M              &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                              &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 1 SPACE    &lt 2 SPACE  &kp RIGHT_COMMAND  &mo 3
            >;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &kp NUMBER_6  &kp N7        &kp N8        &kp N9            &kp N0             &trans
&trans  &kp SLASH     &kp ASTERISK  &kp MINUS     &kp PLUS      &mkp LCLK    &mkp MB4      &kp UP_ARROW  &kp UP_ARROW  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
&trans  &kp GRAVE     &kp NUMBER_2  &kp NUMBER_3  &none         &mkp RCLK    &mkp MB5      &kp LEFT      &kp DOWN      &kp RIGHT         &kp EQUAL          &trans
                                    &trans        &trans        &trans       &trans        &trans        &trans
            >;
        };

        raise_layer {
            display-name = "sys";
            bindings = <
&kp F1  &kp F2                &kp F3                &kp F4  &kp F5  &kp F6     &kp F7      &kp F8      &kp F9             &kp F10          &kp F11       &kp F12
&trans  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp F7  &kp F8  &none      &bt BT_NXT  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &bt BT_SEL 0  &kp RCTRL
&trans  &kp F1                &kp F2                &kp F3  &kp F4  &kp INS    &bt BT_PRV  &kp C_PREV  &kp C_PLAY_PAUSE   &kp C_NEXT       &bt BT_SEL 1  &kp PAUSE_BREAK
                                                    &trans  &trans  &trans     &trans      &trans      &kp LALT
            >;
        };

        num_pad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp PLUS   &kp N7        &kp N8        &kp N9        &kp ASTERISK  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SLASH     &none
&trans  &trans  &trans  &trans  &trans  &trans    &kp N0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD    &none
                        &trans  &trans  &trans    &trans     &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        PNTR {
            if-layers = <1 2>;
            then-layer = <3>; // Change from 3 to 4
        };
    };
};
